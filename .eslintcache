[{"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\containers\\ProductsContainer.js":"1","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\hooks\\useStyles.js":"2","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\services\\ProductsService.js":"3","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ProductCard.js":"4","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ListOfProducts.js":"5","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\hooks\\useTheme.js":"6","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ProductForm.js":"7","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\App.js":"8","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\Routes.js":"9","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\config.js":"10","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ListItems.js":"11","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\pages\\Home.js":"12","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ModalDelete.js":"13","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\UsersTable.js":"14","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\containers\\UsersContainer.js":"15","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\pages\\Users.js":"16","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\Sidebar.js":"17","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\UserForm.js":"18","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\services\\UsersService.js":"19","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\index.js":"20","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\AuthForm.js":"21","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\hooks\\useAuth.js":"22","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\reportWebVitals.js":"23"},{"size":8221,"mtime":1607873200235,"results":"24","hashOfConfig":"25"},{"size":2193,"mtime":1607746103020,"results":"26","hashOfConfig":"25"},{"size":999,"mtime":1607628830635,"results":"27","hashOfConfig":"25"},{"size":3109,"mtime":1607873349762,"results":"28","hashOfConfig":"25"},{"size":1015,"mtime":1607626992218,"results":"29","hashOfConfig":"25"},{"size":2031,"mtime":1607020262672,"results":"30","hashOfConfig":"25"},{"size":4921,"mtime":1607696415760,"results":"31","hashOfConfig":"25"},{"size":108,"mtime":1607276404970,"results":"32","hashOfConfig":"25"},{"size":380,"mtime":1607629910568,"results":"33","hashOfConfig":"25"},{"size":593,"mtime":1607812409348,"results":"34","hashOfConfig":"25"},{"size":936,"mtime":1607020124003,"results":"35","hashOfConfig":"25"},{"size":181,"mtime":1607019685364,"results":"36","hashOfConfig":"25"},{"size":1614,"mtime":1607705066741,"results":"37","hashOfConfig":"25"},{"size":5195,"mtime":1607873464321,"results":"38","hashOfConfig":"25"},{"size":8073,"mtime":1607873514418,"results":"39","hashOfConfig":"25"},{"size":172,"mtime":1607629888231,"results":"40","hashOfConfig":"25"},{"size":4855,"mtime":1607869675318,"results":"41","hashOfConfig":"25"},{"size":4333,"mtime":1607749812833,"results":"42","hashOfConfig":"25"},{"size":931,"mtime":1607629831320,"results":"43","hashOfConfig":"25"},{"size":478,"mtime":1607018600598,"results":"44","hashOfConfig":"25"},{"size":6494,"mtime":1607873803856,"results":"45","hashOfConfig":"25"},{"size":2183,"mtime":1607874293457,"results":"46","hashOfConfig":"25"},{"size":362,"mtime":1607017859456,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tct49f",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\containers\\ProductsContainer.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\hooks\\useStyles.js",[],["103","104"],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\services\\ProductsService.js",[],["105","106"],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ProductCard.js",["107"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DialogTitle } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport useAuth from '../hooks/useAuth'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 241,\r\n        minWidth: 241,\r\n    },\r\n    media: {\r\n        height: 220,\r\n    },\r\n});\r\nexport default function ProductCard({ id, title, image, description, price, onEdit, onDelete }) {\r\n    const classes = useStyles();\r\n    const { isLogged } = useAuth()\r\n    const handleEdit = (e) => {\r\n        const data = {\r\n            id: id,\r\n            title: title,\r\n            image: image,\r\n            description: description,\r\n            price: price\r\n        }\r\n        onEdit(data)\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        onDelete(id)\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={image}\r\n                    title={`ID: ${id}`}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {description}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {price}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {isLogged()\r\n                    ? <React.Fragment>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            className={classes.button}\r\n                            startIcon={<EditIcon />}\r\n                            onClick={handleEdit}\r\n                        >\r\n                            Editar\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleDelete}\r\n                        >\r\n                            Borrar\r\n                        </Button>\r\n                    </React.Fragment>\r\n                    : null}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ListOfProducts.js",[],["108","109"],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\hooks\\useTheme.js",["110","111","112"],"import { useState, useCallback } from 'react';\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n    lightBlue,\r\n    indigo, \r\n    pink,\r\n    red,\r\n    orange,\r\n    green,\r\n    grey,\r\n    deepOrange\r\n  } from \"@material-ui/core/colors\";\r\n\r\nexport default function useTheme() {\r\n    const theme = window.sessionStorage.getItem('dark') === null ||window.sessionStorage.getItem('dark') === 'true' ? true : false\r\n    const [darkState, setDarkState] = useState(theme);\r\n    const palletType = darkState ? \"dark\" : \"light\";\r\n    const mainPrimaryColor = darkState ? green['A200'] : deepOrange['A200'];\r\n    const mainSecondaryColor = darkState ? pink[400] : lightBlue[300];\r\n    const mainErrorColor = darkState ? red[500] : red[500];\r\n    const mainWarningColor = darkState ? orange[500] : orange[500];\r\n    const mainInfoColor = darkState ? lightBlue[500] : lightBlue[500];\r\n    const mainSuccessColor = darkState ? green[500] : green[500];\r\n    const mainBackGroundColor = darkState ? grey[900] : \"#FFFFFF\";\r\n    const inheritBackGroundColor = darkState ? \"#b3e5fc\" : \"#f8bbd0\";\r\n    const darkTheme = createMuiTheme({\r\n        palette: {\r\n            type: palletType,\r\n            background: {\r\n                default: mainBackGroundColor,\r\n            },\r\n            primary: {\r\n                main: mainPrimaryColor,\r\n            },\r\n            secondary: {\r\n                main: mainSecondaryColor\r\n            },\r\n            error: {\r\n                main: mainErrorColor\r\n            },\r\n            warning: {\r\n                main: mainWarningColor\r\n            },\r\n            info: {\r\n                main: mainInfoColor\r\n            },\r\n            success: {\r\n                main: mainSuccessColor\r\n            }\r\n            \r\n        }\r\n    });\r\n\r\n    const changeTheme = useCallback((value) => {\r\n        setDarkState(!value);\r\n        window.sessionStorage.setItem('dark', !value)\r\n    }, [darkState])\r\n\r\n    return{\r\n        darkTheme,\r\n        changeTheme,\r\n        darkState\r\n    }\r\n}","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ProductForm.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\App.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\Routes.js",[],["113","114"],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\config.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ListItems.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\pages\\Home.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\ModalDelete.js",["115"],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\UsersTable.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\containers\\UsersContainer.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\pages\\Users.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\Sidebar.js",["116"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItems from './ListItems';\r\nimport useStyles from '../hooks/useStyles'\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { Brightness5Rounded, Brightness4Rounded } from \"@material-ui/icons\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\nimport AuthForm from './AuthForm';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nexport default function Sidebar({ title, changeTheme, darkState }) {\r\n\r\n    const sidebar = window.sessionStorage.getItem('open') === null || window.sessionStorage.getItem('open') === 'false' ? false : true\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(sidebar);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n        window.sessionStorage.setItem('open', true)\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n        window.sessionStorage.setItem('open', false)\r\n    };\r\n    const handleThemeChange = () => {\r\n        changeTheme(darkState)\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                        {(popupState) => (\r\n                            <div>\r\n                                <Fab size=\"small\" color=\"primary\" style={{ marginRight: 2 }} {...bindTrigger(popupState)}>\r\n                                    <AccountCircleIcon color=\"inherit\" />\r\n                                </Fab>\r\n                                <Popover\r\n                                    {...bindPopover(popupState)}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'center',\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center',\r\n                                    }}\r\n                                >\r\n                                    <Box p={2}>\r\n                                            <AuthForm\r\n                                             />\r\n                                    </Box>\r\n                                </Popover>\r\n                            </div>\r\n                        )}\r\n                    </PopupState>\r\n                    <Fab size=\"small\" color=\"primary\" style={{ marginLeft: 2 }} onClick={handleThemeChange}>\r\n                        {darkState\r\n                            ?\r\n                            <Brightness5Rounded color=\"inherit\" />\r\n                            :\r\n                            <Brightness4Rounded color=\"inherit\" />\r\n                        }\r\n                    </Fab>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItems />\r\n                </List>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\UserForm.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\services\\UsersService.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\index.js",[],"C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\components\\AuthForm.js",["117","118","119"],"import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport useAuth from '../hooks/useAuth'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useLocation } from \"wouter\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function AuthForm() {\r\n    const classes = useStyles();\r\n    const { login, register, signOut, isLogged, getCurrentUser, errorMessage, setErrorMessage } = useAuth()\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n    const [errorForm, setErrorForm] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n    const [error, setError] = useState('')\r\n    const [logged, setLogged] = useState(true)\r\n    const [location, setLocation] = useLocation();\r\n    const [alert, setAlert] = useState(false)\r\n    useEffect(function () {\r\n        if (errorMessage !== '') {\r\n            setError(errorMessage)\r\n            console.log(error)\r\n            setAlert(true)\r\n            setErrorMessage('')\r\n        } else {\r\n            setAlert(false)\r\n        }\r\n    }, [errorMessage])\r\n\r\n\r\n    const toggleChecked = () => {\r\n        setLogged((login) => !login)\r\n    };\r\n\r\n    const handleCloseAlert = () => {\r\n        setAlert(!alert)\r\n    }\r\n\r\n\r\n    const validateData = (data) => {\r\n        let { email, password } = data\r\n        let errorEmail = ''\r\n        let errorPassword = ''\r\n        if ((email === null || email.length === 0)) {\r\n            errorEmail = 'Datos incorrectos'\r\n            setErrorForm({\r\n                email: errorEmail,\r\n                description: errorPassword,\r\n            });\r\n            return false\r\n        }\r\n        if ((password === null || password.length === 0)) {\r\n            errorPassword = 'Datos incorrectos'\r\n            setErrorForm({\r\n                email: errorEmail,\r\n                password: errorPassword,\r\n            });\r\n            return false\r\n        }\r\n        setErrorForm({\r\n            email: '',\r\n            password: '',\r\n        })\r\n        return true\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (validateData(form)) {\r\n            console.log('Sin errores')\r\n            if (logged) {\r\n                login(form)\r\n            } else {\r\n                register(form)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSignOut = () => {\r\n        signOut()\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"lg\" className={classes.container} >\r\n                <Snackbar open={alert}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleCloseAlert}\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}>\r\n                    <Alert onClose={handleCloseAlert} severity=\"error\">\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Container>\r\n            {!isLogged()\r\n                ? <>\r\n                    <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={logged} onChange={toggleChecked} />}\r\n                                    label=\"Ingresar\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div>\r\n                            {logged ? <b>Ingresar</b> : <b>Registrarse</b>}\r\n                            <TextField error={errorForm.email !== '' ? true : false}\r\n                                onChange={handleChange}\r\n                                helperText={errorForm.email}\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                variant=\"filled\"\r\n                                value={form.email} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <TextField error={errorForm.password !== '' ? true : false}\r\n                                onChange={handleChange}\r\n                                helperText={errorForm.password}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                label=\"Contraseña\"\r\n                                variant=\"filled\"\r\n                                value={form.password} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                startIcon={<ArrowForwardIcon />}\r\n                                type=\"submit\" >\r\n                                Confirmar\r\n                    </Button>\r\n                        </div>\r\n                    </form>\r\n                </> :\r\n                <div>\r\n                    <Typography variant=\"p\" component=\"h2\">\r\n                        Hola {getCurrentUser()}\r\n                    </Typography>\r\n                    <Button label=\"Cerrar sesión\" size=\"small\" variant=\"contained\" onClick={handleSignOut}>\r\n                        <ExitToAppIcon />\r\n                    </Button>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n\r\n}","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\hooks\\useAuth.js",["120","121","122"],"import { useCallback, useState } from 'react'\r\n\r\nimport { firebase } from '../config'\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport default function useAuth() {\r\n\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const login = (form) => {\r\n        auth.signInWithEmailAndPassword(form.email, form.password)\r\n            .then((user) => {\r\n                window.location.reload()\r\n                window.sessionStorage.setItem('userEmail', auth.currentUser.email)\r\n                window.sessionStorage.setItem('userToken', auth.currentUser.refreshToken)\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                setErrorMessage(errorMessage)\r\n                alert(errorMessage)\r\n            });\r\n    }\r\n\r\n    const register = (form) => {\r\n        console.log(form)\r\n        auth.createUserWithEmailAndPassword(form.email, form.password)\r\n            .then((user) => {\r\n                window.location.reload()\r\n                window.sessionStorage.setItem('userEmail', auth.currentUser.email)\r\n                window.sessionStorage.setItem('userToken', auth.currentUser.refreshToken)\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                setErrorMessage(errorMessage)\r\n                alert(errorMessage)\r\n            });\r\n    }\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(function () {\r\n            window.sessionStorage.removeItem('userEmail')\r\n            window.sessionStorage.removeItem('userToken')\r\n            window.location.reload()\r\n        }).catch(function (error) {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const isLogged = () => {\r\n        if (auth.currentUser) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    const getCurrentUser = () => {\r\n        return auth.currentUser.email\r\n    }\r\n\r\n    return {\r\n        login,\r\n        register,\r\n        signOut,\r\n        isLogged,\r\n        getCurrentUser,\r\n        errorMessage,\r\n        setErrorMessage\r\n    }\r\n}","C:\\Users\\nico2\\Documents\\Paradigmas\\productos\\productos\\src\\reportWebVitals.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":21},{"ruleId":"123","replacedBy":"133"},{"ruleId":"125","replacedBy":"134"},{"ruleId":"129","severity":1,"message":"135","line":5,"column":5,"nodeType":"131","messageId":"132","endLine":5,"endColumn":11},{"ruleId":"129","severity":1,"message":"136","line":25,"column":11,"nodeType":"131","messageId":"132","endLine":25,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":57,"column":8,"nodeType":"139","endLine":57,"endColumn":19,"suggestions":"140"},{"ruleId":"123","replacedBy":"141"},{"ruleId":"125","replacedBy":"142"},{"ruleId":"129","severity":1,"message":"143","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"144","line":12,"column":8,"nodeType":"131","messageId":"132","endLine":12,"endColumn":22},{"ruleId":"129","severity":1,"message":"145","line":44,"column":12,"nodeType":"131","messageId":"132","endLine":44,"endColumn":20},{"ruleId":"129","severity":1,"message":"146","line":44,"column":22,"nodeType":"131","messageId":"132","endLine":44,"endColumn":33},{"ruleId":"137","severity":1,"message":"147","line":55,"column":8,"nodeType":"139","endLine":55,"endColumn":22,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"149","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":21},{"ruleId":"129","severity":1,"message":"150","line":19,"column":21,"nodeType":"131","messageId":"132","endLine":19,"endColumn":30},{"ruleId":"129","severity":1,"message":"150","line":35,"column":21,"nodeType":"131","messageId":"132","endLine":35,"endColumn":30},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],"no-unused-vars","'DialogTitle' is defined but never used.","Identifier","unusedVar",["151"],["152"],"'indigo' is defined but never used.","'inheritBackGroundColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'darkState'. Either exclude it or remove the dependency array.","ArrayExpression",["153"],["151"],["152"],"'useState' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'error' and 'setErrorMessage'. Either include them or remove the dependency array.",["154"],"'useCallback' is defined but never used.","'errorCode' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: []",{"range":"159","text":"160"},"Update the dependencies array to be: [error, errorMessage, setErrorMessage]",{"range":"161","text":"162"},[1933,1944],"[]",[1890,1904],"[error, errorMessage, setErrorMessage]"]